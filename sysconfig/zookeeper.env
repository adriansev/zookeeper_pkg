#!/usr/bin/env bash

[[ "${0}" != "${BASH_SOURCE[0]}" ]] || { echo "This is an environment setting script, it should not be executed"; exit 1; }

# GET SERVICE CUSTOMIZATIONS : Customize location by editing zookeeper.service [Service] section and adding
# Environment="ZOOCFGDIR=/my/custom/location"
export ZOOCFGDIR="${ZOOCFGDIR:-/etc/zookeeper}"
[[ -f "${ZOOCFGDIR}/zookeeper-env.sh" ]] && source "${ZOOCFGDIR}/zookeeper-env.sh"

export ZK_CUSTOM_OPTS="${ZK_CUSTOM_OPTS}"

export JMXLOCALONLY=${JMXLOCALONLY:-false}
export JMXAUTH=${JMXAUTH:-false}
export JMXSSL=${JMXSSL:-false}

JMXDISABLE=${JMXDISABLE:-false} # default if empty is disabled
JMXDISABLE="${JMXDISABLE,,}"   # toLower
# let's normalize the value
[[ ${JMXDISABLE} != "1" || ${JMXDISABLE} != "true" || ${JMXDISABLE} != "enabled" ]] && ${JMXDISABLE}="false" || ${JMXDISABLE}="true"
export JMXDISABLE

export JMXPORT=${JMXPORT}
export JMXHOSTNAME=${JMXHOSTNAME}

export JMXLOG4J=${JMXLOG4J:-true}
export ZK_LOGJ_OPT=" -Dzookeeper.jmx.log4j.disable=${JMXLOG4J} "

# MAIN ZOOKEEPER
# DO NOT AUTOCREATE ANYTHING
export ZK_MAIN=" ${ZK_CUSTOM_OPTS} -Dzookeeper.datadir.autocreate=false -Dzookeeper.db.autocreate=false ${ZK_LOGJ_OPT} org.apache.zookeeper.server.quorum.QuorumPeerMain "

if [[ -z "${JMXPORT}" ]]; then
    export ZK_REMOTE_OPT=" -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.local.only=${JMXLOCALONLY} "
else
    export ZK_REMOTE_OPT=" -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=${JMXPORT} -Dcom.sun.management.jmxremote.authenticate=${JMXAUTH} "
    [[ -n ${JMXHOSTNAME} ]] && export ZK_REMOTE_OPT="${ZK_REMOTE_OPT} -Djava.rmi.server.hostname=${JMXHOSTNAME} "
fi

export SRV_MEM_OOM=" -XX:+HeapDumpOnOutOfMemoryError -XX:OnOutOfMemoryError='kill -9 %p' "

# default heap for zookeeper server
ZK_SERVER_HEAP="${ZK_SERVER_HEAP:-1000}"
export SERVER_JVMFLAGS="-Xmx${ZK_SERVER_HEAP}m ${SERVER_JVMFLAGS}"

# default heap for zookeeper client
ZK_CLIENT_HEAP="${ZK_CLIENT_HEAP:-256}"
export CLIENT_JVMFLAGS="-Xmx${ZK_CLIENT_HEAP}m $CLIENT_JVMFLAGS"

[[ -f "${ZOOCFGDIR}/java.env" ]] && source "${ZOOCFGDIR}/java.env"

export ZK_LOG_DIR="${ZOO_LOG_DIR:-/var/log/zookeeper}"
mkdir -p ${ZK_LOG_DIR}
ZK_LOG_FILE="${ZK_LOG_FILE:-zookeeper-${USER}-server-${HOSTNAME}.log}"
ZK_LOGS_OPT=" -Dzookeeper.log.dir=${ZK_LOG_DIR} -Dzookeeper.log.file=${ZK_LOG_FILE} "

export ZK_JAR_DIR="${ZK_JAR_DIR:-/usr/share/java/zookeeper}"

#add the default jar dir to classpath
CLASSPATH="${ZOOKEEPER_JAR_DIR}${CLASSPATH:+:}${CLASSPATH}"
for J in $(find ${ZOOKEEPER_JAR_DIR} -iname "*.jar"); do CLASSPATH="$J${CLASSPATH:+:}${CLASSPATH}"; done
export CLASSPATH

# Ansemble the java command line to be started by service unit
export ZK_JAVA_CMD=" ${SRV_MEM_OOM} ${SERVER_JVMFLAGS} ${ZK_LOGS_OPT} ${ZK_MAIN} "
[[ "${JMXDISABLE}" == "false" ]] && export ZK_JAVA_CMD=" ${ZK_REMOTE_OPT} ${ZK_JAVA_CMD} "

